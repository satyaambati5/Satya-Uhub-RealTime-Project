<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<sub-flow name="insert-Covid-case-Sub-Flow" doc:id="024bc222-cd17-4e0e-a867-83ba607710b9" >
		<logger level="INFO" doc:name="Logger" doc:id="d2d8aa78-6c53-473b-ba8f-1680f742f1e3" message="==============Regiser Covid Case Flow Has Stared: Payload is : #[payload] =================="/>
		<set-variable value="#[payload]" doc:name="Prepared Payload For Insert" doc:id="fba60b65-6d44-412d-b002-255374b4ea7d" variableName="insertPayload"/>
		<db:select doc:name="Select" doc:id="aa6726f8-4b7c-4514-b501-5b5e7b23fa37" config-ref="Postgresql_Database_Config1">
			<db:sql ><![CDATA[SELECT COUNT(*) AS count FROM public.cvd_case_master WHERE national_id = :nationalId]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	nationalId:vars.insertPayload.national_id}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="a457b077-e4e5-42ee-8842-3194476cd6bc" >
			  <when expression="#[payload[0].count &gt; 0]">
                <ee:transform doc:name="Transform Message - Duplicate Found">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "Duplicate record found for National ID: " ++ vars.insertPayload.national_id
} as Object {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
                    </ee:message>
                </ee:transform>
            
</when>
			<otherwise >
				<db:insert doc:name="Register Covid Case" doc:id="6e79ca4b-0d0f-4a31-b1bb-72f5b1812257" config-ref="Postgresql_Database_Config1" autoGenerateKeys="true">
			<db:sql><![CDATA[insert into CVD_CASE_MASTER(source, case_type, first_name, last_name, phone, email, date_of_birth, national_id, national_id_type, street_address, city, state, postal, country, create_date, update_date, create_by, update_by) values(:source, :case_type, :first_name, :last_name, :phone, :email,:date_of_birth, :national_id, :national_id_type, :street_address, :city, :state, :postal, :country, :create_date,:update_date, :create_by, :update_by)]]></db:sql>
			<db:input-parameters><![CDATA[#[vars.insertPayload]]]></db:input-parameters>
			<db:auto-generated-keys-column-names>
				<db:auto-generated-keys-column-name value="case_id" />
			</db:auto-generated-keys-column-names>
		</db:insert>
				<ee:transform doc:name="Transform Message" doc:id="9d5d3ff3-e7b3-413c-89bc-f2b2daaa8ffc" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  caseID: payload[0]
} as Object {encoding: "UTF-8", mediaType: "application/json"}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="44bd6fcf-900f-47a1-a6ac-ef4a25bddbcf" message="=================Regiser Covid Case Flow Has Completed and Returned to mainFlow payload: #[payload]====================================="/>
	</sub-flow>
	<sub-flow name="update-covid-case-sub-flow" doc:id="78d07c71-ea4d-4c15-8c9a-20666b089880">
		<logger level="DEBUG" doc:name="Start Log" doc:id="87b70b57-c1dc-4855-96bf-271f18dbc176" message='transactionID: #[vars.transactionId]], correlationID: #[vars.correlationID], message: "Before update case database call", payload: #[payload]' />
		<db:update doc:name="Update Covid Case Master" doc:id="b13f8ab3-7bbc-45e7-90eb-6aaf8aa8fc4a" config-ref="Postgresql_Database_Config1">
			<db:sql><![CDATA[update cvd_case_master set source=:source, case_type=:case_type, first_name=:first_name, last_name=:last_name, phone=:phone, email=:email, date_of_birth=:date_of_birth, national_id=:national_id, national_id_type=:national_id_type, street_address=:street_address, city=:city, state=:state, postal=:postal, country=:country, update_date=:update_date, create_by=:create_by, update_by=:update_by where case_id=:case_id]]></db:sql>
			<db:input-parameters><![CDATA[#[vars.covidCasePayload]]]></db:input-parameters>
		</db:update>
		<logger level="DEBUG" doc:name="End Log" doc:id="9b85d864-aa1e-4a26-ac97-bb5ad6819584" message='transactionID: #[vars.transactionId]], correlationID: #[vars.correlationID], message: "Completed update case database call"' />
	</sub-flow>
	<sub-flow name="fetch-case-reports-sub-flow" doc:id="8ee68c1d-722a-4b26-ab84-ee3326d75d81" >
		<logger level="DEBUG" doc:name="Start Log" doc:id="fdc2e7e0-bd58-4e7b-a482-200c61323f67" message='transactionID: #[vars.transactionId]], correlationID: #[vars.correlationID], message: Before fetching case reports database call"' />
		<db:select doc:name="Select Case Reports" doc:id="c93849b3-d7cd-45cd-a93c-e9fcd7998b21" config-ref="Postgresql_Database_Config1">
			<db:sql><![CDATA[#["$(vars.reportsDynamicQuery)"]]]></db:sql>
		</db:select>
		<logger level="DEBUG" doc:name="End Log" doc:id="ee060a89-a88f-4462-940e-f975fc6ab9d6" message='transactionID: #[vars.transactionId]], correlationID: #[vars.correlationID], message: Completed fetch case reports database call"' />
	
</sub-flow>
<sub-flow name="fetch-case-by-national-id-sub-flow" doc:id="ee22bd81-3ddc-47ed-9ce8-b44a03ece743" >
		<logger level="DEBUG" doc:name="Start Log" doc:id="438afe64-3372-486a-958b-c0bd1db09895" message='transactionID: #[vars.transactionId]], correlationID: #[vars.correlationID], message: "Before fetching case by national id database call"' />
		<db:select doc:name="Select Case by NationalID" doc:id="1fab6385-da17-4a48-879d-1b6b72e4721a" config-ref="Postgresql_Database_Config1">
			<db:sql><![CDATA[select case_id, source, case_type, first_name, last_name, phone, email, date_of_birth, national_id, national_id_type, street_address, city, state, postal, country, create_date, update_date from cvd_case_master where national_id = :national_id]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	national_id: vars.nationalID
}]]]></db:input-parameters>
		</db:select>
		<logger level="DEBUG" doc:name="End Log" doc:id="552cb34c-cbb4-4dee-baee-384a9db44015" message='transactionID: #[vars.transactionId]], correlationID: #[vars.correlationID], message: Completed fetch case by national id database call"' />
	
</sub-flow>
</mule>
